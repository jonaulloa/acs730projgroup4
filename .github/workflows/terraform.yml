name: "Terraform Workflow for Two-Tier Web App - Group4"

on:
  push:
    branches:
     # - prod
      - staging

  pull_request:
    branches:
      # - prod
      - staging

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    environment: two-tier-web-app
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN:  ${{ secrets.AWS_SESSION_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.9
          terraform_wrapper: true

      - name: Terraform fmt - Networking
        run: terraform fmt
        continue-on-error: true
        working-directory: ./environments/${{ github.head_ref }}/networking

      - name: Terraform Init - Networking
        run: terraform init
        working-directory: ./environments/${{ github.head_ref }}/networking

      - name: Terraform Validate - Networking
        run: terraform validate -no-color
        working-directory: ./environments/${{ github.head_ref }}/networking

      - name: Terraform Plan - Networking
        run: terraform plan -input=false -no-color -out tf.plan
        working-directory: ./environments/${{ github.head_ref }}/networking
        continue-on-error: true

      - name: Terraform Show - Networking
        run: terraform show -no-color tf.plan 2>&1 > /tmp/plan.txt
        working-directory: ./environments/${{ github.head_ref }}/networking

      # Repeat similar steps for Webserver or other modules

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require("fs");
            const plan = fs.readFileSync("/tmp/plan.txt", "utf8");
            const maxGitHubBodyCharacters = 65536;
            // ... [rest of the GitHub script for comment creation]

      - name: Terraform Apply - Networking
        if: github.ref == 'refs/heads/prod' && github.event_name == 'push'
        run: terraform apply -input=false tf.plan
        working-directory: ./environments/${{ github.head_ref }}/networking
        shell: bash

      - name: Terraform fmt - Webserver
        run: terraform fmt
        continue-on-error: true
        working-directory: ./environments/${{ github.head_ref }}/webserver

      - name: Terraform Init - Webserver
        run: terraform init
        working-directory: ./environments/${{ github.head_ref }}/webserver

      - name: Terraform Validate - Webserver
        run: terraform validate -no-color
        working-directory: ./environments/${{ github.head_ref }}/webserver

      - name: Terraform Plan - Webserver
        run: terraform plan -input=false -no-color -out tf.plan
        working-directory: ./environments/${{ github.head_ref }}/webserver
        continue-on-error: true

      - name: Terraform Show - Webserver
        run: terraform show -no-color tf.plan 2>&1 > /tmp/plan.txt
        working-directory: ./environments/${{ github.head_ref }}/webserver

      # Conditional Apply for Webserver
      - name: Terraform Apply - Webserver
        if: github.ref == 'refs/heads/prod' && github.event_name == 'push'
        run: terraform apply -input=false tf.plan
        working-directory: ./environments/${{ github.head_ref }}/webserver
        shell: bash

  

